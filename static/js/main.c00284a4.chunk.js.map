{"version":3,"sources":["Components/Footer/Footer.module.css","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.module.css","TodoList.module.css","Components/TaskList/TaskList.module.css","Components/TaskList/Task/Task.module.css","State/ToDo-Reselect.js","HOOKS/useSelector.js","Components/TaskList/Task/Task.jsx","HOOKS/useDispatch.js","Components/TaskList/Task/TaskContainer.jsx","Models/ActionConst.js","Components/TaskList/TaskList.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasksContainer.jsx","Components/Footer/Footer.jsx","Components/Footer/FooterContainer.jsx","Components/TodoListApp/TodoListApp.jsx","TodoList.js","Utils/LocalStorage.js","Models/todo-Reducer.js","State/Store.js","index.js"],"names":["module","exports","getTasks","state","task","tasks","getTasksReselect","createSelector","getAllSelectedReselect","allSelected","getLeftTasksReselect","leftTasks","getFilterValueReselect","filter","getTasksCount","length","useSelectors","func","params","useSelector","memo","isCheck","id","editMode","cacheValueTask","currentEditTask","changeBox","removeTask","startChangeTask","changeValueTask","stopChangeTask","className","classes","item","onDoubleClick","ref","autoFocus","classnames","edit","active","value","onChange","e","currentTarget","onBlur","onKeyDown","toggle","type","onClick","checkboxCustom","check","text","removeBtn","taskText","useAction","dispatch","useDispatch","useCallback","payload","TaskContainer","useState","setEditMode","changeCacheValueTask","changeCheck","removeTaskHook","removeEmptyTask","endEditTask","useRef","stopEditTask","changedTasks","map","t","title","event","key","current","TaskList","tasksd","filteredTasks","index","main","todoList","isTasks","changeValue","selectAll","isAllSelected","header","onKeyPress","todosInput","placeholder","toggleAll","FieldCreatingNewTaskContainer","countTasks","addTask","selectedAllTasks","editValue","trim","nanoid","Boolean","Footer","removeSelectedTask","filterTasks","dataFooter","todoCount","filters","href","filterBtnJs","innerText","clear","FooterContainer","removeSelectedTasks","method","TodoListApp","headerText","todo","TodoList","controllAllSelected","getCountLeftTasks","useEffect","count","getStorage","prop","valueDefault","localStorage","getItem","JSON","parse","initialState","taskReducer","action","setItem","stringify","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c00284a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataFooter\":\"Footer_dataFooter__1Qwen\",\"todoCount\":\"Footer_todoCount__1CcRj\",\"filters\":\"Footer_filters__5t2EO\",\"clear\":\"Footer_clear__2aJGt\",\"active\":\"Footer_active__14w6u\",\"filterBtnJs\":\"Footer_filterBtnJs__2B824\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"FieldCreatingNewTasks_header__1O1fB\",\"todosInput\":\"FieldCreatingNewTasks_todosInput__17N2v\",\"toggleAll\":\"FieldCreatingNewTasks_toggleAll__2i-9Q\",\"active\":\"FieldCreatingNewTasks_active__247XH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerText\":\"TodoList_headerText__2jkBW\",\"todo\":\"TodoList_todo__1CS5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TaskList_main__DLCrZ\",\"todoList\":\"TaskList_todoList__2Aene\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Task_item__2Ugjx\",\"removeBtn\":\"Task_removeBtn__3h8DL\",\"toggle\":\"Task_toggle__A4FfK\",\"redactor\":\"Task_redactor__3pPaR\",\"taskText\":\"Task_taskText__uLqQR\",\"checkboxCustom\":\"Task_checkboxCustom__26eOQ\",\"text\":\"Task_text__2Hyq1\",\"check\":\"Task_check__NIDTR\",\"edit\":\"Task_edit__1wp3_\",\"active\":\"Task_active__1EmoS\"};","import {createSelector} from \"reselect\";\r\n\r\nconst getTasks = (state) => {\r\n  return state.task.tasks;\r\n};\r\n\r\nexport const getTasksReselect = createSelector([getTasks], (tasks) => tasks);\r\n\r\nconst getAllSelectedFromState = (state) => {\r\n  return state.task.allSelected;\r\n};\r\n\r\nexport const getAllSelectedReselect = createSelector([getAllSelectedFromState], (allSelected) => allSelected);\r\n\r\nconst getLeftTasks = (state) => {\r\n  return state.task.leftTasks;\r\n};\r\n\r\nexport const getLeftTasksReselect = createSelector([getLeftTasks], (leftTasks) => leftTasks);\r\n\r\nconst getFilterValue = (state) => {\r\n  return state.task.filter;\r\n};\r\n\r\nexport const getFilterValueReselect = createSelector([getFilterValue], (filter) => filter);\r\n\r\nexport const getFilteredTasksReselect = (type) => createSelector([getTasks], (filteredTasks) => {\r\n  return filteredTasks.filter(t => {\r\n    switch (type) {\r\n      case 'All':\r\n        return t;\r\n      case 'Active':\r\n        return t.check;\r\n      case 'Completed':\r\n        return !t.check;\r\n      default:\r\n        return t;\r\n    }\r\n  });\r\n});\r\n\r\nexport const getTasksCount = createSelector([getTasks], (tasks) => tasks.length);","import {useSelector} from \"react-redux\";\r\n\r\nconst useSelectors = (func, params = {}) => useSelector(state => func(state, params));\r\nexport default useSelectors;","import React, { memo } from 'react';\r\nimport classes from './Task.module.css';\r\nimport classnames from 'classnames';\r\n\r\nconst Task = ({\r\n  isCheck,\r\n  id,\r\n  task,\r\n  editMode,\r\n  cacheValueTask,\r\n  currentEditTask,\r\n  changeBox,\r\n  removeTask,\r\n  startChangeTask,\r\n  changeValueTask,\r\n  stopChangeTask\r\n}) => {\r\n  \r\n  return (\r\n    <li className={classes.item} onDoubleClick={startChangeTask}>\r\n      {!editMode\r\n        ? <label className={classes.toggle}>\r\n          <input type=\"checkbox\"/>\r\n          <span\r\n            onClick={changeBox}\r\n            className={classnames(\r\n            classes.checkboxCustom,\r\n            isCheck && classes.check\r\n          )}\r\n          />\r\n          <span className={classes.text} id={id}>\r\n            {task}\r\n          </span>\r\n          <button className={classes.removeBtn} onClick={removeTask}/>\r\n          <button className={classes.taskText}/>\r\n      </label>\r\n        : <input\r\n          ref={currentEditTask}\r\n          autoFocus\r\n          className={classnames(\r\n            classes.edit,\r\n            editMode && classes.active\r\n          )}\r\n          value={cacheValueTask}\r\n          onChange={(e) => changeValueTask(e.currentTarget.value)}\r\n          onBlur={(e) => stopChangeTask(e, cacheValueTask)}\r\n          onKeyDown={(e) => stopChangeTask(e, cacheValueTask)}\r\n        />\r\n      }\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default memo(Task);","import { useCallback } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport Task from './Task';\r\nimport useAction from \"../../../HOOKS/useDispatch\";\r\nimport {CHANGE_TASK_STATUS, END_EDIT_TASK, REMOVE_EMPTY_TASK, REMOVE_TASK} from \"../../../Models/ActionConst\";\r\n\r\nconst TaskContainer = ({\r\n  id,\r\n  isCheck,\r\n  task,\r\n  tasks\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cacheValueTask, changeCacheValueTask] = useState('');\r\n  const changeCheck = useAction(CHANGE_TASK_STATUS);\r\n  const removeTaskHook = useAction(REMOVE_TASK);\r\n  const removeEmptyTask = useAction(REMOVE_EMPTY_TASK);\r\n  const endEditTask = useAction(END_EDIT_TASK);\r\n  const currentEditTask = useRef(null);\r\n  \r\n  const changeBox = () => {\r\n    const changedTasks = tasks.map(t => {\r\n      if (t.id === id) {\r\n        return {...t, check: !t.check}\r\n      } else {\r\n        return {...t, check: t.check}\r\n      }});\r\n    changeCheck(changedTasks);\r\n  };\r\n\r\n  const removeTask = () => {\r\n    removeTaskHook(id);\r\n  };\r\n\r\n  const startChangeTask = () => {\r\n    setEditMode(true);\r\n    changeCacheValueTask(task);\r\n  };\r\n\r\n  const changeValueTask = useCallback((value) => {\r\n    changeCacheValueTask(value);\r\n  }, [changeCacheValueTask]);\r\n\r\n  const stopEditTask = (value) => {\r\n    let changedTasks = tasks.map(t => {\r\n      if (t.id === id) {\r\n        return {...t, title: value}\r\n      } else {\r\n        return {...t}\r\n      }\r\n    });\r\n    endEditTask(changedTasks);\r\n    if (value === '') {\r\n      changedTasks = changedTasks.filter(t => t.title !== '');\r\n      removeEmptyTask(changedTasks);\r\n    }\r\n    setEditMode(false);\r\n  };\r\n\r\n\r\n  const stopChangeTask = (event, value) => {\r\n    if (event.key === 'Enter') {\r\n      stopEditTask(value);\r\n    } else if (event.currentTarget === currentEditTask.current && !event.key) {\r\n      stopEditTask(value);\r\n    } else if (event.key === 'Escape') {\r\n      stopEditTask(task);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Task\r\n      isCheck = {isCheck}\r\n      id = {id}\r\n      task = {task}\r\n      editMode={editMode}\r\n      cacheValueTask={cacheValueTask}\r\n      currentEditTask={currentEditTask}\r\n      changeBox={changeBox}\r\n      removeTask={removeTask}\r\n      startChangeTask={startChangeTask}\r\n      changeValueTask={(changeValueTask)}\r\n      stopChangeTask={stopChangeTask}\r\n    />\r\n  )\r\n};\r\n\r\nexport default TaskContainer;","export const ADD_TASK = 'ADD_TASK';\r\nexport const CHANGE_TASK_STATUS = 'CHANGE__CHECK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const SELECT_ALL_TASK = 'SELECT_ALL_TASK';\r\nexport const CONTROL_ALL_SELECTED = 'CONTROL_ALL_SELECTED';\r\nexport const LEFT_TASKS = 'LEFT_TASKS';\r\nexport const REMOVE_SELECT_TASKS = 'REMOVE_SELECT_TASKS';\r\nexport const END_EDIT_TASK = 'END_EDIT_TASK';\r\nexport const REMOVE_EMPTY_TASK = 'REMOVE_EMPTY_TASK';\r\nexport const FILTER_TASKS =  'FILTER_TASKS';\r\n","import React  from 'react';\r\nimport classes from './TaskList.module.css';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {getFilteredTasksReselect, getFilterValueReselect} from \"../../State/ToDo-Reselect\";\r\nimport TaskContainer from \"./Task/TaskContainer\";\r\n\r\n\r\nconst TaskList = ({tasks}) => {\r\n  const filter = useSelectors(getFilterValueReselect);\r\n  let tasksd = useSelectors(getFilteredTasksReselect(filter));\r\n  tasksd = tasksd.map((t, index) => <TaskContainer\r\n    key={index}\r\n    id={t.id}\r\n    isCheck={t.check}\r\n    task={t.title}\r\n    tasks = {tasks}\r\n  />);\r\n  \r\n  return (<section className={classes.main}>\r\n      <ul className={classes.todoList}>\r\n        {tasksd}\r\n      </ul>\r\n    </section>\r\n  )\r\n};\r\n\r\n\r\nexport default TaskList;","import React, { memo } from 'react';\r\nimport classes from './FieldCreatingNewTasks.module.css';\r\nimport classnames from 'classnames';\r\n\r\nconst FieldCreatingNewTask =({\r\n  isTasks,\r\n  changeValue,\r\n  selectAll,\r\n  value,\r\n  isAllSelected\r\n}) => {\r\n  return (\r\n    <div className={classes.header}>\r\n      <input\r\n        onChange={changeValue}\r\n        onKeyPress={changeValue}\r\n        autoFocus\r\n        className={classes.todosInput}\r\n        value={value}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n      {isTasks &&\r\n      <button\r\n        onClick={selectAll}\r\n        className={classnames(\r\n          classes.toggleAll,\r\n          isAllSelected && classes.active\r\n        )}\r\n      />}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default  memo(FieldCreatingNewTask);","import React, { useState, useCallback } from 'react';\r\nimport FieldCreatingNewTask from './FieldCreatingNewTasks';\r\nimport nanoid from 'nanoid';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {getAllSelectedReselect} from \"../../State/ToDo-Reselect\";\r\nimport useAction from \"../../HOOKS/useDispatch\";\r\nimport {ADD_TASK, SELECT_ALL_TASK} from \"../../Models/ActionConst\";\r\n\r\nconst FieldCreatingNewTaskContainer = ({countTasks}) => {\r\n  const allSelected = useSelectors(getAllSelectedReselect);\r\n  const addTask = useAction(ADD_TASK);\r\n  const selectedAllTasks = useAction(SELECT_ALL_TASK);\r\n  let [value, editValue] = useState('');\r\n\r\n  const changeValue = useCallback(e => {\r\n    editValue(e.currentTarget.value);\r\n    if (e.key === 'Enter' && e.currentTarget.value.trim()) {\r\n      addTask([nanoid(), e.currentTarget.value]);\r\n      editValue('');\r\n    }\r\n  }, [addTask]);\r\n  \r\n\r\n  const selectAll = () => {\r\n    selectedAllTasks();\r\n  };\r\n\r\n\r\n  return (\r\n    <FieldCreatingNewTask\r\n      isTasks = {Boolean(countTasks)}\r\n      selectAll = {selectAll}\r\n      isAllSelected = {Boolean(allSelected)}\r\n      value = {value}\r\n      changeValue = {changeValue}\r\n    />\r\n  )\r\n};\r\n\r\n\r\nexport default FieldCreatingNewTaskContainer;","import React from 'react';\r\nimport classes from './Footer.module.css';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst Footer = ({\r\n  leftTasks,\r\n  removeSelectedTask,\r\n  countTasks,\r\n  filter,\r\n  filterTasks\r\n}) => {\r\n  return (\r\n    <div className={classes.dataFooter}>\r\n\t\t  <span className={classes.todoCount}>\r\n\t\t\t<strong>{leftTasks}</strong>\r\n\t\t\t  item left\r\n\t\t  </span>\r\n        <ul className={classes.filters}>\r\n          <li>\r\n            <a href=\"#/All\"\r\n              className={classnames(\r\n                classes.filterBtnJs,\r\n                filter === 'All' && classes.active\r\n              )}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>All</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/Active\"\r\n              className={classnames(\r\n                classes.filterBtnJs,\r\n                filter === 'Active' && classes.active\r\n              )}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>Active</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/Completed\"\r\n              className={classnames(\r\n                classes.filterBtnJs,\r\n                filter === 'Completed' && classes.active\r\n              )}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>Completed</a>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          className={classnames(\r\n            classes.clear,\r\n            leftTasks < countTasks && classes.active\r\n          )}\r\n          onClick={() => {removeSelectedTask()}}>\r\n          Clear completed\r\n        </button>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from './Footer';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {getFilterValueReselect, getLeftTasksReselect} from \"../../State/ToDo-Reselect\";\r\nimport useAction from \"../../HOOKS/useDispatch\";\r\nimport {FILTER_TASKS, REMOVE_SELECT_TASKS} from \"../../Models/ActionConst\";\r\n\r\n\r\nconst FooterContainer = ({countTasks}) => {\r\n  const leftTasks = useSelectors(getLeftTasksReselect);\r\n  const filter = useSelectors(getFilterValueReselect);\r\n  const removeSelectedTasks = useAction(REMOVE_SELECT_TASKS);\r\n  const filterTasks = useAction(FILTER_TASKS);\r\n  \r\n  const filteredTasks = (method) => {\r\n    filterTasks(method);\r\n  };\r\n  \r\n  const removeSelectedTask = () => {\r\n    removeSelectedTasks()\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Footer\r\n      leftTasks={leftTasks}\r\n      removeSelectedTask={removeSelectedTask}\r\n      countTasks={countTasks}\r\n      filter={filter}\r\n      filterTasks = {filteredTasks}\r\n    />\r\n  )\r\n};\r\n\r\nexport default FooterContainer;","import React from 'react';\r\nimport classes from './../../TodoList.module.css';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport FieldCreatingNewTaskContainer from '../FieldCreatingNewTasks/FieldCreatingNewTasksContainer';\r\nimport FooterContainer from '../Footer/FooterContainer';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {getTasksCount} from \"../../State/ToDo-Reselect\";\r\n\r\n\r\nconst TodoListApp = ({tasks}) => {\r\n  const countTasks = useSelectors(getTasksCount);\r\n  return (\r\n    <>\r\n      <header className={classes.headerText}>todos</header>\r\n      <div className={classes.todo}>\r\n        <FieldCreatingNewTaskContainer countTasks = {countTasks}/>\r\n        <TaskList tasks = {tasks}/>\r\n        {Boolean(countTasks) && <FooterContainer countTasks = {countTasks}/>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoListApp;\r\n","import React, { useEffect } from 'react';\nimport {\n  getFilterValueReselect,\n  getTasksReselect,\n} from './State/ToDo-Reselect';\nimport TodoListApp from './Components/TodoListApp/TodoListApp';\nimport useSelectors from \"./HOOKS/useSelector\";\nimport {CONTROL_ALL_SELECTED, LEFT_TASKS} from \"./Models/ActionConst\";\nimport useAction from \"./HOOKS/useDispatch\";\n\n\n\nconst  TodoList  = () => {\n  \n  \n  const tasks = useSelectors(getTasksReselect);\n  const filter = useSelectors(getFilterValueReselect);\n  const controllAllSelected = useAction(CONTROL_ALL_SELECTED);\n  const getCountLeftTasks = useAction(LEFT_TASKS);\n  useEffect(() => {\n    const count = tasks.filter(t => !t.check).length;\n    getCountLeftTasks(count);\n    controllAllSelected();\n    \n  }, [tasks, controllAllSelected, getCountLeftTasks, filter]);\n\n    return (\n     <TodoListApp  tasks = {tasks}/>\n    );\n};\n\n\n\nexport default TodoList;\n","export const getStorage = (prop, valueDefault = []) => {\r\n  if (localStorage.getItem(prop)) {\r\n    return JSON.parse(localStorage.getItem(prop));\r\n  }\r\n  return valueDefault;\r\n};\r\n\r\n","import { getStorage } from \"../Utils/LocalStorage\";\r\nimport {\r\n  ADD_TASK,\r\n  CHANGE_TASK_STATUS,\r\n  CONTROL_ALL_SELECTED, END_EDIT_TASK, FILTER_TASKS, LEFT_TASKS, REMOVE_EMPTY_TASK,\r\n  REMOVE_SELECT_TASKS,\r\n  REMOVE_TASK,\r\n  SELECT_ALL_TASK\r\n} from \"./ActionConst\";\r\n\r\nlet initialState = {\r\n  tasks: getStorage('todo'),\r\n  allSelected: false,\r\n  leftTasks: 0,\r\n  filter: getStorage('filter', 'All'),\r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  localStorage.setItem('todo', JSON.stringify(state.tasks));\r\n  localStorage.setItem('filter', JSON.stringify(state.filter));\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return {\r\n          ...state,\r\n          tasks: [...state.tasks, {id: action.payload[0], check: false, title: action.payload[1]}],\r\n      };\r\n    case CHANGE_TASK_STATUS:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload\r\n      };\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => t.id !== action.payload)\r\n      };\r\n    case REMOVE_SELECT_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => !t.check)\r\n      };\r\n    case SELECT_ALL_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(t => ({...t, check: !state.allSelected}))\r\n      };\r\n    case CONTROL_ALL_SELECTED:\r\n      return {\r\n        ...state,\r\n        allSelected: !state.leftTasks && state.tasks.length,\r\n      };\r\n    case LEFT_TASKS:\r\n      return {\r\n        ...state,\r\n        leftTasks: action.payload\r\n      };\r\n    case END_EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload\r\n      };\r\n    case REMOVE_EMPTY_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload\r\n      };\r\n    case FILTER_TASKS:\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default taskReducer;","import { combineReducers, createStore } from 'redux';\r\nimport taskReducer from './../Models/todo-Reducer';\r\n\r\n\r\nlet reducer = combineReducers(\r\n  {\r\n    task: taskReducer\r\n  }\r\n);\r\n\r\nlet store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './TodoList';\nimport store from \"./State/Store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render (\n  <Provider store={store}>\n  <TodoList/>\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}