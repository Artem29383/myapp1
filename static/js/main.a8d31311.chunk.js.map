{"version":3,"sources":["Components/TaskList/Task/Task.module.css","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.module.css","TodoList.module.css","Components/TaskList/TaskList.module.css","Components/Footer/Footer.module.css","State/ToDo-Reselect.js","State/ToDo-Reducer.js","Api/Api.js","Components/Footer/Footer.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.jsx","Components/TaskList/Task/Task.jsx","Components/TaskList/Task/TaskContainer.jsx","Components/TaskList/TaskList.jsx","Components/TodoListApp/TodoListApp.jsx","TodoList.js","Api/Saga.js","State/Store.js","index.js"],"names":["module","exports","getTasks","state","task","tasks","getInitState","init","getAllSelectedState","allSelected","getLeftTasks","leftTasks","getFilterValue","filter","initialState","outputFromLocalStorage","type","taskReducer","action","taskValue","length","t","check","title","filterMethod","filterValue","API","getAllTasks","instance","get","then","response","data","postCreateTask","id","post","deleteRemoveTask","delete","putCheckBox","put","putUpdateValueTask","this","axios","baseURL","Footer","props","filterTasks","method","localStorage","setItem","JSON","stringify","className","classes","data__footer","todo__count","filters","href","filterBtnJs","active","onClick","e","currentTarget","innerText","clear","map","a","statusText","removeSelectedTasks","FieldCreatingNewTask","useState","value","EditValue","selectAll","lastTask","changeCheck","onKeyDownCreateTask","key","Math","floor","random","addTask","header","onChange","autoFocus","todos__input","placeholder","onKeyDown","toggle__all","Task","item","onDoubleClick","startChangeTask","editMode","ref","currentEditTask","edit","cacheValueTask","changeValueTask","onBlur","stopChangeTask","toggle","changeBox","checkbox__custom","text","removebtn","removeTask","noclick","TaskContainer","setEditMode","changeCacheValueTask","React","createRef","stopEditTask","endEditTask","removeClearTask","event","current","TaskList","index","main","todo__list","TodoListApp","header__text","todo","connect","initState","selectAllTasks","controllAllSelected","getCountLeftTasks","outputFilterFromLocalStorage","useEffect","getItem","parse","outPutDataSaga","watchSaga","rootSaga","call","takeLatest","takeEvery","all","sagaMiddleware","createSagaMiddleware","reducer","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d31311.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Task_item__2Ugjx\",\"removebtn\":\"Task_removebtn__R_aGf\",\"toggle\":\"Task_toggle__A4FfK\",\"redactor\":\"Task_redactor__3pPaR\",\"noclick\":\"Task_noclick__TBsRt\",\"checkbox__custom\":\"Task_checkbox__custom__dMvd_\",\"text\":\"Task_text__2Hyq1\",\"check\":\"Task_check__NIDTR\",\"edit\":\"Task_edit__1wp3_\",\"active\":\"Task_active__1EmoS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"FieldCreatingNewTasks_header__1O1fB\",\"todos__input\":\"FieldCreatingNewTasks_todos__input__2_NIa\",\"toggle__all\":\"FieldCreatingNewTasks_toggle__all__2o73M\",\"active\":\"FieldCreatingNewTasks_active__247XH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header__text\":\"TodoList_header__text__1Fz0m\",\"todo\":\"TodoList_todo__1CS5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TaskList_main__DLCrZ\",\"todo__list\":\"TaskList_todo__list__1OXWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data__footer\":\"Footer_data__footer__2lxAh\",\"todo__count\":\"Footer_todo__count__3V25F\",\"filters\":\"Footer_filters__5t2EO\",\"clear\":\"Footer_clear__2aJGt\",\"active\":\"Footer_active__14w6u\",\"filterBtnJs\":\"Footer_filterBtnJs__2B824\",\"footer__inner\":\"Footer_footer__inner__1dpFZ\"};","export const getTasks = (state) => {\r\n  return state.task.tasks;\r\n};\r\n\r\nexport const getInitState = (state) => {\r\n  return state.task.init;\r\n};\r\n\r\nexport const getAllSelectedState = (state) => {\r\n  return state.task.allSelected;\r\n};\r\n\r\nexport const getLeftTasks = (state) => {\r\n  return state.task.leftTasks;\r\n};\r\n\r\nexport const getFilterValue = (state) => {\r\n  return state.task.filter;\r\n};","const ADD_TASK = 'ADD_TASK';\r\nconst CHANGE_TASK_STATUS = 'CHANGE_TASK_STATUS';\r\nconst REMOVE_TASK = 'REMOVE_TASK';\r\nconst OUTPUT_TAKS_FROM_LOCALSTORAGE = 'OUTPUT_TAKS_FROM_LOCALSTORAGE';\r\nconst INITIALIZATION = 'INITIALIZATION';\r\nconst SELECT_ALL_TASK = 'SELECT_ALL_TASK';\r\nconst CONTROL_ALL_SELECTED = 'CONTROL_ALL_SELECTED';\r\nconst LEFT_TASKS = 'LEFT_TASKS';\r\nconst REMOVE_SELECT_TASKS = 'REMOVE_SELECT_TASKS';\r\nconst END_EDIT_TASK = 'END_EDIT_TASK';\r\nconst REMOVE_CLEAR_TASK = 'REMOVE_CLEAR_TASK';\r\nconst FILTER_TASKS = 'FILTER_TASKS';\r\nconst OUTPUT_FILTER_FROM_LOCALSTORAGE = 'OUTPUT_FILTER_FROM_LOCALSTORAGE';\r\n\r\n\r\nlet initialState = {\r\n  tasks: [],\r\n  init: false,\r\n  allSelected: false,\r\n  leftTasks: 0,\r\n  filter: 'All'\r\n};\r\n\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_TASK:\r\n          return {\r\n            ...state,\r\n            taskValue: ''\r\n          };\r\n      case CHANGE_TASK_STATUS:\r\n        return {\r\n          ...state,\r\n        };\r\n      case REMOVE_TASK:\r\n        return {\r\n          ...state,\r\n        };\r\n      case REMOVE_SELECT_TASKS:\r\n        return {\r\n          ...state,\r\n        };\r\n      case OUTPUT_TAKS_FROM_LOCALSTORAGE:\r\n        return {...state, tasks: [...action.tasks]};\r\n      case INITIALIZATION:\r\n        return {...state, init: true};\r\n      case SELECT_ALL_TASK:\r\n        return {\r\n          ...state,\r\n        };\r\n      case CONTROL_ALL_SELECTED:\r\n        return {\r\n          ...state,\r\n          allSelected: !state.leftTasks && state.tasks.length,\r\n        };\r\n      case LEFT_TASKS:\r\n        return {\r\n          ...state,\r\n          leftTasks: state.tasks.filter(t => !t.check).length,\r\n        };\r\n      case END_EDIT_TASK:\r\n        return {\r\n          ...state,\r\n        };\r\n      case REMOVE_CLEAR_TASK:\r\n        return {\r\n          ...state,\r\n          tasks: state.tasks.filter(t => t.title !== '')\r\n        };\r\n      case FILTER_TASKS:\r\n        return {\r\n          ...state,\r\n          filter: action.filterMethod\r\n        };\r\n      case OUTPUT_FILTER_FROM_LOCALSTORAGE:\r\n        return {...state, filter: action.filterValue};\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const addTask = () => ({type: ADD_TASK});\r\nexport const changeCheck = () => ({type: CHANGE_TASK_STATUS});\r\nexport const removeTask = () => ({type: REMOVE_TASK});\r\nexport const outputFromLocalStorage = (tasks) => ({type: OUTPUT_TAKS_FROM_LOCALSTORAGE, tasks});\r\nexport const initState = () => ({type: INITIALIZATION});\r\nexport const selectAllTasks = () => ({type: SELECT_ALL_TASK});\r\nexport const controllAllSelected = () => ({type: CONTROL_ALL_SELECTED});\r\nexport const getCountLeftTasks = () => ({type: LEFT_TASKS});\r\nexport const removeSelectedTasks = () => ({type: REMOVE_SELECT_TASKS});\r\nexport const endEditTask = () => ({type: END_EDIT_TASK});\r\nexport const removeClearTask = () => ({type: REMOVE_CLEAR_TASK});\r\nexport const filterTasks = (filterMethod) => ({type: FILTER_TASKS, filterMethod});\r\nexport const outputFilterFromLocalStorage = (filterValue) => ({type: OUTPUT_FILTER_FROM_LOCALSTORAGE, filterValue});\r\n\r\nexport default taskReducer;","import * as axios from \"axios\";\r\n\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.instance = axios.create({\r\n      baseURL: 'http://localhost:3000/'\r\n    });\r\n  }\r\n\r\n\r\n  getAllTasks = () => {\r\n    return this.instance.get(`tasks`).then(response => response.data);\r\n  };\r\n\r\n  postCreateTask = (id, check, title) => {\r\n    return this.instance.post(`tasks`, {id, check, title});\r\n  };\r\n\r\n  deleteRemoveTask = (id) => {\r\n    return this.instance.delete(`tasks/${id}`);\r\n  };\r\n\r\n  putCheckBox = (id, check, title) => {\r\n    return this.instance.put(`tasks/${id}`, {id: id, check: !check, title: title});\r\n  };\r\n\r\n  putUpdateValueTask = (id, check, title) => {\r\n    return this.instance.put(`tasks/${id}`, {id: id, check: check, title: title});\r\n  }\r\n}\r\n\r\nconst API = new Api();\r\n\r\nexport default API;\r\n","import React from 'react';\r\nimport classes from \"./Footer.module.css\";\r\nimport API from \"../../Api/Api\";\r\n\r\n\r\nconst Footer = (props) => {\r\n  const filterTasks = (method) => {\r\n    props.filterTasks(method);\r\n    localStorage.setItem('filter', JSON.stringify(method));\r\n  };\r\n\r\n  const removeSelectedTasks = () => {\r\n    props.tasks.map(async t => {\r\n      if (t.check) {\r\n        const response = await API.deleteRemoveTask(t.id);\r\n        if (response.statusText === 'OK') {\r\n          props.removeSelectedTasks();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.data__footer}>\r\n\t\t<span className={classes.todo__count}>\r\n\t\t\t<strong>{props.leftTasks}</strong>\r\n\t\t\titem left\r\n\t\t</span>\r\n      <ul className={classes.filters}>\r\n        <li>\r\n          <a href=\"#/All\" className={props.filter === 'All'\r\n            ? `${classes.filterBtnJs} ${classes.active}`\r\n            : `${classes.filterBtnJs}`}\r\n             onClick={(e) => filterTasks(e.currentTarget.innerText)}>All</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#/Active\" className={props.filter === 'Active'\r\n            ? `${classes.filterBtnJs} ${classes.active}`\r\n            : `${classes.filterBtnJs}`}\r\n             onClick={(e) => filterTasks(e.currentTarget.innerText)}>Active</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#/Completed\" className={props.filter === 'Completed'\r\n            ? `${classes.filterBtnJs} ${classes.active}`\r\n            : `${classes.filterBtnJs}`}\r\n             onClick={(e) => filterTasks(e.currentTarget.innerText)}>Completed</a>\r\n        </li>\r\n      </ul>\r\n      <button className={props.leftTasks < props.tasks.length\r\n        ? `${classes.clear} ${classes.active}`\r\n        : `${classes.clear}`} onClick={removeSelectedTasks}>\r\n        Clear completed\r\n      </button>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport classes from \"./FieldCreatingNewTasks.module.css\";\r\nimport API from \"../../Api/Api\";\r\n\r\n\r\nconst FieldCreatingNewTask = (props) => {\r\n  let [value, EditValue] = useState('');\r\n\r\n  const generateId = () => {\r\n    return Math.floor(1 + Math.random() * (9999999999999999));\r\n  };\r\n\r\n\r\n  const selectAll = () => {\r\n    const lastTask = props.tasks[props.tasks.length - 1];\r\n    props.tasks.map(async t => {\r\n      const response = await API.putCheckBox(t.id, props.allSelected, t.title);\r\n      if (lastTask.id === t.id && response.statusText === 'OK') {\r\n        props.changeCheck();\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const changeValue = (e) => {\r\n    EditValue(e.currentTarget.value);\r\n  };\r\n\r\n  const onKeyDownCreateTask = async (key, value) => {\r\n    if (key === 'Enter' && value !== '') {\r\n      const response = await API.postCreateTask(generateId(), false, value);\r\n      if (response.statusText === 'Created') {\r\n        props.addTask();\r\n        EditValue('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const AllSelectBtn = (props) => {\r\n    if (!props.leftTasks && !props.tasks.length) {\r\n      return <> </>\r\n    } else {\r\n      return (\r\n        <button onClick={selectAll} className={props.allSelected\r\n          ? `${classes.toggle__all} ${classes.active}`\r\n          : `${classes.toggle__all}`}></button>)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.header}>\r\n      <input onChange={changeValue} autoFocus={true} className={classes.todos__input}\r\n             placeholder={'What needs to be done?'}\r\n             value={value} onKeyDown={(e) => onKeyDownCreateTask(e.key, value)}/>\r\n      <AllSelectBtn {...props}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default FieldCreatingNewTask;","import React from 'react';\r\nimport classes from './Task.module.css';\r\n\r\nconst Task = (props) => {\r\n    return (<li className={classes.item} onDoubleClick={props.startChangeTask}>\r\n        {!props.editMode ? <label className={classes.toggle}>\r\n          <input type=\"checkbox\"/>\r\n          <span onClick={props.changeBox} className={props.check\r\n            ? `${classes.checkbox__custom} ${classes.check}`\r\n            : `${classes.checkbox__custom}`}></span>\r\n          <span className={classes.text} id={props.id}>{props.task}</span>\r\n          <button className={classes.removebtn} onClick={props.removeTask}></button>\r\n          <button className={classes.noclick}></button>\r\n        </label> : <input ref={props.currentEditTask}\r\n                          autoFocus={true}\r\n                          className={!props.editMode\r\n                            ? `${classes.edit}`\r\n                            : `${classes.edit} ${classes.active}`\r\n                          }\r\n                          value={props.cacheValueTask}\r\n                          onChange={(e) => props.changeValueTask(e.currentTarget.value)}\r\n                          onBlur={(e) => {props.stopChangeTask(e, props.cacheValueTask)}}\r\n                          onKeyDown={(e) => {props.stopChangeTask(e, props.cacheValueTask)}}/>\r\n        }\r\n      </li>\r\n    )\r\n};\r\n\r\nexport default Task;","import React, {useState} from 'react';\r\nimport Task from \"./Task\";\r\nimport API from \"./../../../Api/Api\"\r\n\r\nconst TaskContainer = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cacheValueTask, changeCacheValueTask] = useState('');\r\n  const currentEditTask = React.createRef();\r\n\r\n  const changeBox = async () => {\r\n    const response = await API.putCheckBox(props.id, props.check, props.task);\r\n      if (response.statusText === 'OK') {\r\n        props.changeCheck();\r\n      }\r\n  };\r\n\r\n  const removeTask = async () => {\r\n    const response = await API.deleteRemoveTask(props.id);\r\n      if (response.statusText === 'OK') {\r\n        props.removeTask();\r\n      }\r\n  };\r\n\r\n  const startChangeTask = () => {\r\n    setEditMode(true);\r\n    changeCacheValueTask(props.task);\r\n  };\r\n\r\n  const changeValueTask = (value) => {\r\n    changeCacheValueTask(value);\r\n  };\r\n\r\n  const stopEditTask = (value) => {\r\n    API.putUpdateValueTask(props.id, props.check, value).then(response => {\r\n      if (response.statusText === 'OK') {\r\n        props.endEditTask();\r\n      }\r\n    });\r\n    if (value === '') {\r\n      API.deleteRemoveTask(props.id).then(response => {\r\n        if (response.statusText === 'OK') {\r\n          props.removeClearTask();\r\n        }\r\n      });\r\n    }\r\n    setEditMode(false);\r\n  };\r\n\r\n\r\n  const stopChangeTask = (event, value) => {\r\n    if (event.key === 'Enter') {\r\n      stopEditTask(value);\r\n    } else if (event.currentTarget === currentEditTask.current && !event.key) {\r\n      stopEditTask(value);\r\n    } else if (event.key === 'Escape') {\r\n      stopEditTask(props.task);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Task {...props}\r\n          editMode={editMode}\r\n          cacheValueTask={cacheValueTask}\r\n          currentEditTask={currentEditTask}\r\n          changeBox={changeBox}\r\n          removeTask={removeTask}\r\n          startChangeTask={startChangeTask}\r\n          changeValueTask={changeValueTask}\r\n          stopEditTask={stopEditTask}\r\n          stopChangeTask={stopChangeTask}\r\n    />\r\n  )\r\n};\r\n\r\nexport default TaskContainer;","import React from 'react';\r\nimport classes from \"./TaskList.module.css\";\r\nimport TaskContainer from \"./Task/TaskContainer\";\r\n\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const tasks = props.tasks.map((t, index) => {\r\n    if (props.filter === 'All') {\r\n      return <TaskContainer\r\n        key = {index}\r\n        id={t.id}\r\n        check={t.check}\r\n        task={t.title}\r\n        {...props}/>\r\n    } else if (props.filter === 'Active' && !t.check) {\r\n      return <TaskContainer\r\n        key = {index}\r\n        id={t.id}\r\n        check={t.check}\r\n        task={t.title}\r\n        {...props}/>\r\n    } else if (props.filter === 'Completed' && t.check) {\r\n      return <TaskContainer\r\n        key = {index}\r\n        id={t.id}\r\n        check={t.check}\r\n        task={t.title}\r\n        {...props}/>\r\n    }\r\n  });\r\n\r\n  return (<section className={classes.main}>\r\n      <ul className={classes.todo__list}>\r\n        {tasks}\r\n      </ul>\r\n    </section>\r\n  )\r\n};\r\n\r\n\r\nexport default TaskList;","import React, {useEffect} from 'react';\r\nimport classes from './../../TodoList.module.css';\r\nimport Footer from \"../Footer/Footer\";\r\nimport FieldCreatingNewTask from \"../FieldCreatingNewTasks/FieldCreatingNewTasks\";\r\nimport TaskList from \"../TaskList/TaskList\";\r\n\r\n\r\nconst TodoListApp = (props) => {\r\n    return (\r\n      <>\r\n        <header className={classes.header__text}>todos</header>\r\n        <div className={classes.todo}>\r\n          <FieldCreatingNewTask {...props}/>\r\n          <TaskList {...props}/>\r\n          {!props.leftTasks && !props.tasks.length\r\n            ? <> </>\r\n            : <Footer {...props}/>}\r\n        </div>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default TodoListApp;\r\n","import React, {useEffect} from 'react';\nimport {\n  getAllSelectedState, getFilterValue,\n  getInitState,\n  getLeftTasks,\n  getTasks,\n} from \"./State/ToDo-Reselect\";\nimport {\n  addTask,\n  changeCheck, controllAllSelected, getCountLeftTasks,\n  initState, removeSelectedTasks,\n  removeTask,\n  selectAllTasks,\n  endEditTask, removeClearTask, filterTasks, outputFilterFromLocalStorage\n} from \"./State/ToDo-Reducer\";\nimport {connect} from \"react-redux\";\nimport TodoListApp from \"./Components/TodoListApp/TodoListApp\";\n\nconst  TodoList  = (props) => {\n\n  useEffect(() => {\n    if (localStorage.getItem('filter')) {\n      props.outputFilterFromLocalStorage(JSON.parse(localStorage.getItem('filter')));\n    }\n    props.initState();\n    }, []);\n\n\n  useEffect(() => {\n    props.getCountLeftTasks();\n    props.controllAllSelected();\n  }, [props.tasks]);\n\n\n    return (\n      <>\n        {props.init ? <TodoListApp {...props}/> : <> </>}\n      </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: getTasks(state),\n    init: getInitState(state),\n    allSelected: getAllSelectedState(state),\n    leftTasks: getLeftTasks(state),\n    filter: getFilterValue(state)\n  }\n};\n\nexport default connect(mapStateToProps,\n  {\n    changeCheck,\n    removeTask,\n    initState,\n    selectAllTasks,\n    controllAllSelected,\n    getCountLeftTasks,\n    removeSelectedTasks,\n    addTask,\n    endEditTask,\n    removeClearTask,\n    filterTasks,\n    outputFilterFromLocalStorage\n  })(TodoList);\n","import {put, takeEvery, all, call, takeLatest} from 'redux-saga/effects'\r\nimport {outputFromLocalStorage} from \"../State/ToDo-Reducer\";\r\nimport API from \"./../Api/Api\";\r\n\r\nexport function* outPutDataSaga() {\r\n  yield put(outputFromLocalStorage(yield call(API.getAllTasks)));\r\n}\r\n\r\nexport function* watchSaga() {\r\n  yield takeLatest('INITIALIZATION', outPutDataSaga);\r\n  yield takeEvery(['ADD_TASK',\r\n    'CHANGE_TASK_STATUS',\r\n    'REMOVE_TASK',\r\n    'SELECT_ALL_TASK',\r\n    'REMOVE_SELECT_TASKS',\r\n    'END_EDIT_TASK',\r\n    'REMOVE_SELECT_TASKS'], outPutDataSaga);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchSaga()\r\n  ])\r\n}","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport taskReducer from \"./ToDo-Reducer\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../Api/Saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nlet reducer = combineReducers(\r\n  {\r\n    task: taskReducer\r\n  }\r\n);\r\n\r\nlet store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './TodoList';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./State/Store\";\n\nReactDOM.render (\n  <BrowserRouter >\n    <Provider store = {store}>\n      <TodoList/>\n    </Provider>\n  </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}