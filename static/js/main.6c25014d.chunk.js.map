{"version":3,"sources":["Components/Footer/Footer.module.css","TodoList.module.css","Components/TaskList/TaskList.module.css","Components/TaskList/Task/Task.module.css","State/ToDo-Reselect.js","State/ToDo-Reducer.js","Components/TaskList/Task/Task.jsx","Components/TaskList/Task/TaskContainer.jsx","Components/TaskList/TaskList.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasksContainer.jsx","Components/Footer/Footer.jsx","Components/Footer/FooterContainer.jsx","Components/TodoListApp/TodoListApp.jsx","TodoList.js","State/Store.js","index.js","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.module.css"],"names":["module","exports","getTasks","state","task","tasks","getInitState","init","getAllSelectedFromState","allSelected","getLeftTasks","leftTasks","getFilterValue","filter","ADD_TASK","REMOVE_TASK","LEFT_TASKS","END_EDIT_TASK","FILTER_TASKS","initialState","taskReducer","action","type","valueTask","trim","id","taskId","check","title","map","t","length","message","filterMethod","filterValue","React","memo","isCheck","editMode","cacheValueTask","currentEditTask","changeBox","removeTask","startChangeTask","changeValueTask","stopChangeTask","className","classes","item","onDoubleClick","ref","autoFocus","classNames","edit","active","value","onChange","e","currentTarget","onBlur","onKeyDown","toggle","onClick","checkboxCustom","text","removeBtn","taskText","TaskContainer","props","useState","setEditMode","changeCacheValueTask","useRef","useCallback","stopEditTask","endEditTask","removeEmptyTask","changeCheck","event","key","current","TaskList","index","main","todoList","FieldCreatingNewTask","isTasks","changeValue","selectAll","isAllSelected","header","onKeyPress","todosInput","placeholder","toggleAll","defaultProps","FieldCreatingNewTaskContainer","editValue","addTask","generateId","Math","floor","random","selectedAllTasks","Footer","removeSelectedTasks","filterTasks","dataFooter","todoCount","filters","href","filterBtnJs","innerText","clear","FooterContainer","method","localStorage","setItem","JSON","stringify","TodoListApp","headerText","todo","connect","initState","controllAllSelected","getCountLeftTasks","outputFromLocalStorage","outputFilterFromLocalStorage","useEffect","getItem","parse","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c25014d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataFooter\":\"Footer_dataFooter__1Qwen\",\"todoCount\":\"Footer_todoCount__1CcRj\",\"filters\":\"Footer_filters__5t2EO\",\"clear\":\"Footer_clear__2aJGt\",\"active\":\"Footer_active__14w6u\",\"filterBtnJs\":\"Footer_filterBtnJs__2B824\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerText\":\"TodoList_headerText__2jkBW\",\"todo\":\"TodoList_todo__1CS5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TaskList_main__DLCrZ\",\"todoList\":\"TaskList_todoList__2Aene\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Task_item__2Ugjx\",\"removeBtn\":\"Task_removeBtn__3h8DL\",\"toggle\":\"Task_toggle__A4FfK\",\"redactor\":\"Task_redactor__3pPaR\",\"taskText\":\"Task_taskText__uLqQR\",\"checkboxCustom\":\"Task_checkboxCustom__26eOQ\",\"text\":\"Task_text__2Hyq1\",\"check\":\"Task_check__NIDTR\",\"edit\":\"Task_edit__1wp3_\",\"active\":\"Task_active__1EmoS\"};","export const getTasks = (state) => {\r\n  return state.task.tasks;\r\n};\r\n\r\nexport const getInitState = (state) => {\r\n  return state.task.init;\r\n};\r\n\r\nexport const getAllSelectedFromState = (state) => {\r\n  return state.task.allSelected;\r\n};\r\n\r\nexport const getLeftTasks = (state) => {\r\n  return state.task.leftTasks;\r\n};\r\n\r\nexport const getFilterValue = (state) => {\r\n  return state.task.filter;\r\n};","const ADD_TASK = 'ToDo-Reducer/ADD_TASK';\r\nconst CHANGE_TASK_STATUS = 'ToDo-Reducer/CHANGE__CHECK';\r\nconst REMOVE_TASK = 'ToDo-Reducer/REMOVE_TASK';\r\nconst OUTPUT_TAKS_FROM_LOCALSTORAGE = 'ToDo-Reducer/OUTPUT_TAKS_FROM_LOCALSTORAGE';\r\nconst INITIALIZATION = 'ToDo-Reducer/INITIALIZATION';\r\nconst SELECT_ALL_TASK = 'ToDo-Reducer/SELECT_ALL_TASK';\r\nconst CONTROL_ALL_SELECTED = 'ToDo-Reducer/CONTROL_ALL_SELECTED';\r\nconst LEFT_TASKS = 'ToDo-Reducer/LEFT_TASKS';\r\nconst REMOVE_SELECT_TASKS = 'ToDo-Reducer/REMOVE_SELECT_TASKS';\r\nconst END_EDIT_TASK = 'ToDo-Reducer/END_EDIT_TASK';\r\nconst REMOVE_EMPTY_TASK = 'ToDo-Reducer/REMOVE_EMPTY_TASK';\r\nconst FILTER_TASKS =  'ToDo-Reducer/FILTER_TASKS';\r\nconst OUTPUT_FILTER_FROM_LOCALSTORAGE = 'ToDo-Reducer/OUTPUT_FILTER_FROM_LOCALSTORAGE';\r\n\r\n\r\nlet initialState = {\r\n  tasks: [],\r\n  init: false,\r\n  allSelected: false,\r\n  leftTasks: 0,\r\n  filter: 'All'\r\n};\r\n\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      if (action.valueTask.trim() !== '') {\r\n        return {\r\n          ...state,\r\n          tasks: [...state.tasks, {id: action.taskId, check: false, title: action.valueTask}],\r\n        };\r\n      }\r\n    case CHANGE_TASK_STATUS:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(t => {\r\n          if (t.id === action.taskId) {\r\n            return {...t, check: !t.check}\r\n          } else {\r\n            return {...t, check: t.check}\r\n          }\r\n        })\r\n      };\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => t.id !== action.taskId)\r\n      };\r\n    case REMOVE_SELECT_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => !t.check)\r\n      };\r\n    case OUTPUT_TAKS_FROM_LOCALSTORAGE:\r\n      return {...state, tasks: [...state.tasks, ...action.tasks]};\r\n    case INITIALIZATION:\r\n      return {...state, init: true};\r\n    case SELECT_ALL_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(t => ({...t, check: !state.allSelected}))\r\n      };\r\n    case CONTROL_ALL_SELECTED:\r\n      return {\r\n        ...state,\r\n        allSelected: !state.leftTasks && state.tasks.length,\r\n      };\r\n    case LEFT_TASKS:\r\n      return {\r\n        ...state,\r\n        leftTasks: state.tasks.filter(t => !t.check).length,\r\n      };\r\n    case END_EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(t => {\r\n          if (t.id === action.taskId) {\r\n            return {...t, title: action.message}\r\n          } else {\r\n            return {...t}\r\n          }\r\n        })\r\n      };\r\n    case REMOVE_EMPTY_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(t => t.title !== '')\r\n      };\r\n    case FILTER_TASKS:\r\n      return {\r\n        ...state,\r\n        filter: action.filterMethod\r\n      };\r\n    case OUTPUT_FILTER_FROM_LOCALSTORAGE:\r\n      return {...state, filter: action.filterValue};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n  export const addTask = (taskId, valueTask) => ({type: ADD_TASK, taskId, valueTask});\r\n  export const changeCheck = (taskId) => ({type: CHANGE_TASK_STATUS, taskId});\r\n  export const removeTask = (taskId) => ({type: REMOVE_TASK, taskId});\r\n  export const outputFromLocalStorage = (tasks) => ({type: OUTPUT_TAKS_FROM_LOCALSTORAGE, tasks});\r\n  export const initState = () => ({type: INITIALIZATION});\r\n  export const selectedAllTasks = () => ({type: SELECT_ALL_TASK});\r\n  export const controllAllSelected = () => ({type: CONTROL_ALL_SELECTED});\r\n  export const getCountLeftTasks = () => ({type: LEFT_TASKS});\r\n  export const removeSelectedTasks = () => ({type: REMOVE_SELECT_TASKS});\r\n  export const endEditTask = (taskId, message) => ({type: END_EDIT_TASK, taskId, message});\r\n  export const removeEmptyTask = () => ({type: REMOVE_EMPTY_TASK});\r\n  export const filterTasks = (filterMethod) => ({type: FILTER_TASKS, filterMethod});\r\n  export const outputFilterFromLocalStorage = (filterValue) => ({type: OUTPUT_FILTER_FROM_LOCALSTORAGE, filterValue});\r\n\r\n  export default taskReducer;","import React from 'react';\r\nimport classes from './Task.module.css';\r\nimport classNames from 'classnames';\r\n\r\nconst Task = ({\r\n  isCheck,\r\n  id,\r\n  task,\r\n  editMode,\r\n  cacheValueTask,\r\n  currentEditTask,\r\n  changeBox,\r\n  removeTask,\r\n  startChangeTask,\r\n  changeValueTask,\r\n  stopChangeTask\r\n}) => {\r\n  return (\r\n    <li className={classes.item} onDoubleClick={startChangeTask}>\r\n      {!editMode\r\n        ? <label className={classes.toggle}>\r\n          <input type=\"checkbox\"/>\r\n          <span onClick={changeBox} className={classNames(classes.checkboxCustom, isCheck && classes.check)}/>\r\n          <span className={classes.text} id={id}>\r\n            {task}\r\n          </span>\r\n          <button className={classes.removeBtn} onClick={removeTask}/>\r\n          <button className={classes.taskText}/>\r\n      </label>\r\n        : <input\r\n          ref={currentEditTask}\r\n          autoFocus\r\n          className={classNames(classes.edit, editMode && classes.active)}\r\n          value={cacheValueTask}\r\n          onChange={(e) => changeValueTask(e.currentTarget.value)}\r\n          onBlur={(e) => stopChangeTask(e, cacheValueTask)}\r\n          onKeyDown={(e) => stopChangeTask(e, cacheValueTask)}\r\n        />\r\n      }\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default React.memo(Task);","import React, { useState, useCallback, useRef } from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskContainer = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cacheValueTask, changeCacheValueTask] = useState('');\r\n  const currentEditTask = useRef(null);\r\n\r\n  const changeBox = () => {\r\n    props.changeCheck(props.id);\r\n  };\r\n\r\n  const removeTask = () => {\r\n    props.removeTask(props.id);\r\n  };\r\n\r\n  const startChangeTask = () => {\r\n    setEditMode(true);\r\n    changeCacheValueTask(props.task);\r\n  };\r\n\r\n  const changeValueTask = useCallback((value) => {\r\n    changeCacheValueTask(value);\r\n  }, [cacheValueTask]);\r\n\r\n  const stopEditTask = (value) => {\r\n    props.endEditTask(props.id, value);\r\n    if (value === '') {\r\n      props.removeEmptyTask();\r\n    }\r\n    setEditMode(false);\r\n  };\r\n\r\n\r\n  const stopChangeTask = (event, value) => {\r\n    if (event.key === 'Enter') {\r\n      stopEditTask(value);\r\n    } else if (event.currentTarget === currentEditTask.current && !event.key) {\r\n      stopEditTask(value);\r\n    } else if (event.key === 'Escape') {\r\n      stopEditTask(props.task);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Task\r\n      isCheck = {props.isCheck}\r\n      id = {props.id}\r\n      task = {props.task}\r\n      editMode={editMode}\r\n      cacheValueTask={cacheValueTask}\r\n      currentEditTask={currentEditTask}\r\n      changeBox={changeBox}\r\n      removeTask={removeTask}\r\n      startChangeTask={startChangeTask}\r\n      changeValueTask={(changeValueTask)}\r\n      stopChangeTask={stopChangeTask}\r\n    />\r\n  )\r\n};\r\n\r\nexport default TaskContainer;","import React from 'react';\r\nimport classes from './TaskList.module.css';\r\nimport TaskContainer from './Task/TaskContainer';\r\n\r\n\r\nconst TaskList = (props) => {\r\n\r\n  const tasks = props.tasks.map((t, index) => {\r\n    if (props.filter === 'All') {\r\n      return <TaskContainer\r\n        key={index}\r\n        id={t.id}\r\n        isCheck={t.check}\r\n        task={t.title}\r\n        {...props}\r\n      />\r\n    } else if (props.filter === 'Active' && !t.check) {\r\n      return <TaskContainer\r\n        key={index}\r\n        id={t.id}\r\n        isCheck={t.check}\r\n        task={t.title}\r\n        {...props}\r\n      />\r\n    } else if (props.filter === 'Completed' && t.check) {\r\n      return <TaskContainer\r\n        key={index}\r\n        id={t.id}\r\n        isCheck={t.check}\r\n        task={t.title}\r\n        {...props}\r\n      />\r\n    }\r\n  });\r\n\r\n  return (<section className={classes.main}>\r\n      <ul className={classes.todoList}>\r\n        {tasks}\r\n      </ul>\r\n    </section>\r\n  )\r\n};\r\n\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport classes from './FieldCreatingNewTasks.module.css';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FieldCreatingNewTask =({\r\n  isTasks,\r\n  changeValue,\r\n  selectAll,\r\n  value,\r\n  isAllSelected\r\n}) => {\r\n  return (\r\n    <div className={classes.header}>\r\n      <input\r\n        onChange={changeValue}\r\n        onKeyPress={changeValue}\r\n        autoFocus\r\n        className={classes.todosInput}\r\n        value={value}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n      {isTasks &&\r\n      <button\r\n        onClick={selectAll}\r\n        className={classNames(classes.toggleAll, isAllSelected && classes.active)}/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nFieldCreatingNewTask.propTypes = {\r\n  isTasks: PropTypes.bool,\r\n  changeValue: PropTypes.func.isRequired,\r\n  selectAll: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  isAllSelected: PropTypes.bool\r\n};\r\n\r\nFieldCreatingNewTask.defaultProps = {\r\n  isTasks: true,\r\n  isAllSelected: true,\r\n  value: ''\r\n};\r\n\r\nexport default  React.memo(FieldCreatingNewTask);","import React, { useState, useCallback } from 'react';\r\nimport FieldCreatingNewTask from './FieldCreatingNewTasks';\r\n\r\nconst FieldCreatingNewTaskContainer = (props) => {\r\n  let [value, editValue] = useState('');\r\n\r\n  const changeValue = useCallback(e => {\r\n    editValue(e.currentTarget.value);\r\n    if (e.key === 'Enter') {\r\n      props.addTask(generateId(), e.currentTarget.value);\r\n      editValue('');\r\n    }\r\n  }, [value]);\r\n\r\n\r\n  const generateId = () => {\r\n    return Math.floor(1 + Math.random() * (9999999999999999));\r\n  };\r\n\r\n  const selectAll = () => {\r\n    props.selectedAllTasks();\r\n  };\r\n\r\n\r\n  return (\r\n    <FieldCreatingNewTask\r\n      isTasks = {!!props.tasks}\r\n      selectAll = {selectAll}\r\n      isAllSelected = {!!props.allSelected}\r\n      value = {value}\r\n      changeValue = {(changeValue)}\r\n    />\r\n  )\r\n};\r\n\r\n\r\nexport default FieldCreatingNewTaskContainer;","import React from 'react';\r\nimport classes from './Footer.module.css';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst Footer = ({\r\n  leftTasks,\r\n  removeSelectedTasks,\r\n  tasks,\r\n  filter,\r\n  filterTasks\r\n}) => {\r\n  return (\r\n    <div className={classes.dataFooter}>\r\n\t\t  <span className={classes.todoCount}>\r\n\t\t\t<strong>{leftTasks}</strong>\r\n\t\t\t  item left\r\n\t\t  </span>\r\n        <ul className={classes.filters}>\r\n          <li>\r\n            <a href=\"#/All\"\r\n              className={classNames(classes.filterBtnJs, filter === 'All' && classes.active)}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>All</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/Active\"\r\n              className={classNames(classes.filterBtnJs, filter === 'Active' && classes.active)}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>Active</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/Completed\"\r\n              className={classNames(classes.filterBtnJs, filter === 'Completed' && classes.active)}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>Completed</a>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          className={classNames(classes.clear, leftTasks < tasks && classes.active)}\r\n          onClick={() => {removeSelectedTasks()}}>\r\n          Clear completed\r\n        </button>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from './Footer';\r\n\r\n\r\nconst FooterContainer = (props) => {\r\n  const filterTasks = (method) => {\r\n    props.filterTasks(method);\r\n    localStorage.setItem('filter', JSON.stringify(method));\r\n  };\r\n\r\n  return (\r\n    <Footer\r\n      leftTasks={props.leftTasks}\r\n      removeSelectedTasks={props.removeSelectedTasks}\r\n      tasks={props.tasks.length}\r\n      filter={props.filter}\r\n      filterTasks = {filterTasks}\r\n    />\r\n  )\r\n};\r\n\r\nexport default FooterContainer;","import React from 'react';\r\nimport classes from './../../TodoList.module.css';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport FieldCreatingNewTaskContainer from '../FieldCreatingNewTasks/FieldCreatingNewTasksContainer';\r\nimport FooterContainer from '../Footer/FooterContainer';\r\n\r\n\r\nconst TodoListApp = (props) => {\r\n  return (\r\n    <>\r\n      <header className={classes.headerText}>todos</header>\r\n      <div className={classes.todo}>\r\n        <FieldCreatingNewTaskContainer {...props}/>\r\n        <TaskList {...props}/>\r\n        {!!props.tasks.length && <FooterContainer {...props}/>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoListApp;\r\n","import React, { useEffect } from 'react';\nimport {\n  getAllSelectedFromState, getFilterValue,\n  getInitState,\n  getLeftTasks,\n  getTasks,\n} from './State/ToDo-Reselect';\nimport {\n  addTask,\n  changeCheck, controllAllSelected, getCountLeftTasks,\n  initState, removeSelectedTasks,\n  removeTask,\n  selectedAllTasks,\n  endEditTask, removeEmptyTask, filterTasks, outputFilterFromLocalStorage, outputFromLocalStorage\n} from './State/ToDo-Reducer';\nimport { connect } from 'react-redux';\nimport TodoListApp from './Components/TodoListApp/TodoListApp';\n\nconst  TodoList  = (props) => {\n\n  useEffect(() => {\n    if (localStorage.getItem('todo')) {\n      props.outputFromLocalStorage(JSON.parse(localStorage.getItem('todo')));\n    }\n    if (localStorage.getItem('filter')) {\n      props.outputFilterFromLocalStorage(JSON.parse(localStorage.getItem('filter')));\n    }\n    props.initState();\n    }, []);\n\n\n  useEffect(() => {\n    props.getCountLeftTasks();\n    props.controllAllSelected();\n    localStorage.setItem('todo', JSON.stringify(props.tasks));\n  }, [props.tasks]);\n\n\n    return (\n      <>\n        {props.init ? <TodoListApp {...props}/> : null}\n      </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: getTasks(state),\n    init: getInitState(state),\n    allSelected: getAllSelectedFromState(state),\n    leftTasks: getLeftTasks(state),\n    filter: getFilterValue(state)\n  }\n};\n\nexport default connect(mapStateToProps,\n  {\n    changeCheck,\n    removeTask,\n    initState,\n    selectedAllTasks,\n    controllAllSelected,\n    getCountLeftTasks,\n    removeSelectedTasks,\n    outputFromLocalStorage,\n    addTask,\n    endEditTask,\n    removeEmptyTask,\n    filterTasks,\n    outputFilterFromLocalStorage\n  })(TodoList);\n","import { combineReducers, createStore } from 'redux';\r\nimport taskReducer from './ToDo-Reducer';\r\n\r\n\r\nlet reducer = combineReducers(\r\n  {\r\n    task: taskReducer\r\n  }\r\n);\r\n\r\nlet store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './TodoList';\nimport store from \"./State/Store\";\n\nReactDOM.render (<TodoList store = {store}/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"FieldCreatingNewTasks_header__1O1fB\",\"todosInput\":\"FieldCreatingNewTasks_todosInput__17N2v\",\"toggleAll\":\"FieldCreatingNewTasks_toggleAll__2i-9Q\",\"active\":\"FieldCreatingNewTasks_active__247XH\"};"],"sourceRoot":""}