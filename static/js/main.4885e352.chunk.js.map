{"version":3,"sources":["Components/Footer/Footer.module.css","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.module.css","TodoList.module.css","Components/TaskList/TaskList.module.css","Components/TaskList/Task/Task.module.css","State/ToDo-Reselect.js","HOOKS/useSelector.js","Components/TaskList/Task/Task.jsx","HOOKS/useDispatch.js","Components/TaskList/Task/TaskContainer.jsx","Models/ActionConst.js","Components/TaskList/TaskList.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasks.jsx","Components/FieldCreatingNewTasks/FieldCreatingNewTasksContainer.jsx","Components/Footer/Footer.jsx","Components/Footer/FooterContainer.jsx","Components/TodoListApp/TodoListApp.jsx","TodoList.js","Utils/LocalStorage.js","Utils/removePropFromObject.js","Utils/removeArrayElement.js","Models/todo-Reducer.js","State/Store.js","index.js"],"names":["module","exports","getTasksReselect","createSelector","state","task","tasks","entities","getIds","ids","getIdsReselect","getAllSelectedReselect","allSelected","getLeftTasksReselect","leftTasks","getFilterValueReselect","filter","getTasksCount","Object","keys","length","useSelectors","func","params","useSelector","memo","isCheck","id","editMode","cacheValueTask","currentEditTask","changeBox","removeTask","startChangeTask","changeValueTask","stopChangeTask","className","classes","item","onDoubleClick","ref","autoFocus","classnames","edit","active","value","onChange","e","currentTarget","onBlur","onKeyDown","toggle","type","onClick","checkboxCustom","check","text","removeBtn","taskText","useAction","dispatch","useDispatch","useCallback","payload","TaskContainer","useState","setEditMode","changeCacheValueTask","changeCheck","removeTaskHook","endEditTask","useRef","stopEditTask","event","key","current","TaskList","filteredTasks","t","getFilteredTasksReselect","map","index","title","main","todoList","isTasks","changeValue","selectAll","isAllSelected","header","onKeyPress","todosInput","placeholder","toggleAll","FieldCreatingNewTaskContainer","countTasks","addTask","selectedAllTasks","editValue","trim","nanoid","Boolean","Footer","removeSelectedTask","filterTasks","dataFooter","todoCount","filters","href","filterBtnJs","innerText","clear","FooterContainer","removeSelectedTasks","method","TodoListApp","headerText","todo","TodoList","controllAllSelected","getCountLeftTasks","useEffect","count","getStorage","prop","valueDefault","localStorage","getItem","JSON","parse","removePropFromObject","obj","res","removeArrayElement","indexOf","splice","initialState","myTasks","schema","Entity","dataNormalized","normalize","result","taskReducer","action","copyIds","setItem","stringify","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4885e352.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataFooter\":\"Footer_dataFooter__1Qwen\",\"todoCount\":\"Footer_todoCount__1CcRj\",\"filters\":\"Footer_filters__5t2EO\",\"clear\":\"Footer_clear__2aJGt\",\"active\":\"Footer_active__14w6u\",\"filterBtnJs\":\"Footer_filterBtnJs__2B824\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"FieldCreatingNewTasks_header__1O1fB\",\"todosInput\":\"FieldCreatingNewTasks_todosInput__17N2v\",\"toggleAll\":\"FieldCreatingNewTasks_toggleAll__2i-9Q\",\"active\":\"FieldCreatingNewTasks_active__247XH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerText\":\"TodoList_headerText__2jkBW\",\"todo\":\"TodoList_todo__1CS5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TaskList_main__DLCrZ\",\"todoList\":\"TaskList_todoList__2Aene\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Task_item__2Ugjx\",\"removeBtn\":\"Task_removeBtn__3h8DL\",\"toggle\":\"Task_toggle__A4FfK\",\"redactor\":\"Task_redactor__3pPaR\",\"taskText\":\"Task_taskText__uLqQR\",\"checkboxCustom\":\"Task_checkboxCustom__26eOQ\",\"text\":\"Task_text__2Hyq1\",\"check\":\"Task_check__NIDTR\",\"edit\":\"Task_edit__1wp3_\",\"active\":\"Task_active__1EmoS\"};","import { createSelector } from \"reselect\";\r\n\r\nconst getTasks = (state) => {\r\n  return state.task.tasks.entities;\r\n};\r\n\r\nexport const getTasksReselect = createSelector([getTasks], (entities) => entities);\r\n\r\nconst getIds = (state) => {\r\n  return state.task.tasks.ids;\r\n};\r\n\r\nexport const getIdsReselect = createSelector([getIds], (ids) => ids);\r\n\r\nconst getAllSelectedFromState = (state) => {\r\n  return state.task.allSelected;\r\n};\r\n\r\nexport const getAllSelectedReselect = createSelector([getAllSelectedFromState], (allSelected) => allSelected);\r\n\r\nconst getLeftTasks = (state) => {\r\n  return state.task.leftTasks;\r\n};\r\n\r\nexport const getLeftTasksReselect = createSelector([getLeftTasks], (leftTasks) => leftTasks);\r\n\r\nconst getFilterValue = (state) => {\r\n  return state.task.filter;\r\n};\r\n\r\nexport const getFilterValueReselect = createSelector([getFilterValue], (filter) => filter);\r\n\r\nexport const getFilteredTasksReselect = (type, tasks) => createSelector([getIds], (ids) => {\r\n  return ids.filter(t => {\r\n    switch (type) {\r\n      case 'All':\r\n        return tasks[t];\r\n      case 'Active':\r\n        return !tasks[t].check;\r\n      case 'Completed':\r\n        return tasks[t].check;\r\n      default:\r\n        return tasks[t];\r\n    }\r\n  });\r\n});\r\n\r\nconst getTasksLength = (state) => {\r\n  return Object.keys(state.task.tasks.entities).length;\r\n};\r\n\r\nexport const getTasksCount = createSelector([getTasksLength], (entities) => entities);","import {useSelector} from \"react-redux\";\r\n\r\nconst useSelectors = (func, params = {}) => useSelector(state => func(state, params));\r\nexport default useSelectors;","import React, { memo } from 'react';\r\nimport classes from './Task.module.css';\r\nimport classnames from 'classnames';\r\n\r\nconst Task = ({\r\n  isCheck,\r\n  id,\r\n  task,\r\n  editMode,\r\n  cacheValueTask,\r\n  currentEditTask,\r\n  changeBox,\r\n  removeTask,\r\n  startChangeTask,\r\n  changeValueTask,\r\n  stopChangeTask\r\n}) => {\r\n  \r\n  return (\r\n    <li className={classes.item} onDoubleClick={startChangeTask}>\r\n      {!editMode\r\n        ? <label className={classes.toggle}>\r\n          <input type=\"checkbox\"/>\r\n          <span\r\n            onClick={changeBox}\r\n            className={classnames(\r\n            classes.checkboxCustom,\r\n            isCheck && classes.check\r\n          )}\r\n          />\r\n          <span className={classes.text} id={id}>\r\n            {task}\r\n          </span>\r\n          <button className={classes.removeBtn} onClick={removeTask}/>\r\n          <button className={classes.taskText}/>\r\n      </label>\r\n        : <input\r\n          ref={currentEditTask}\r\n          autoFocus\r\n          className={classnames(\r\n            classes.edit,\r\n            editMode && classes.active\r\n          )}\r\n          value={cacheValueTask}\r\n          onChange={(e) => changeValueTask(e.currentTarget.value)}\r\n          onBlur={(e) => stopChangeTask(e, cacheValueTask)}\r\n          onKeyDown={(e) => stopChangeTask(e, cacheValueTask)}\r\n        />\r\n      }\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default memo(Task);","import { useCallback } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useAction = type => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((payload = {}) => dispatch({type, payload}), [\r\n    dispatch,\r\n    type\r\n  ]);\r\n};\r\n\r\nexport default useAction;\r\n\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport Task from './Task';\r\nimport useAction from \"../../../HOOKS/useDispatch\";\r\nimport {CHANGE_TASK_STATUS, END_EDIT_TASK, REMOVE_TASK} from \"../../../Models/ActionConst\";\r\n\r\nconst TaskContainer = ({\r\n  id,\r\n  isCheck,\r\n  task,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [cacheValueTask, changeCacheValueTask] = useState('');\r\n  const changeCheck = useAction(CHANGE_TASK_STATUS);\r\n  const removeTaskHook = useAction(REMOVE_TASK);\r\n  const endEditTask = useAction(END_EDIT_TASK);\r\n  const currentEditTask = useRef(null);\r\n  const changeBox = () => {\r\n    changeCheck([id, !isCheck, task]);\r\n  };\r\n  const removeTask = () => {\r\n    removeTaskHook(id);\r\n  };\r\n\r\n  const startChangeTask = () => {\r\n    setEditMode(true);\r\n    changeCacheValueTask(task);\r\n  };\r\n\r\n  const changeValueTask = useCallback((value) => {\r\n    changeCacheValueTask(value);\r\n  }, [changeCacheValueTask]);\r\n\r\n  const stopEditTask = (value) => {\r\n    endEditTask([id, isCheck, value]);\r\n    if (value === '') {\r\n      removeTaskHook(id);\r\n    }\r\n    setEditMode(false);\r\n  };\r\n\r\n\r\n  const stopChangeTask = (event, value) => {\r\n    if (event.key === 'Enter') {\r\n      stopEditTask(value);\r\n    } else if (event.currentTarget === currentEditTask.current && !event.key) {\r\n      stopEditTask(value);\r\n    } else if (event.key === 'Escape') {\r\n      stopEditTask(task);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Task\r\n      isCheck = {isCheck}\r\n      id = {id}\r\n      task = {task}\r\n      editMode={editMode}\r\n      cacheValueTask={cacheValueTask}\r\n      currentEditTask={currentEditTask}\r\n      changeBox={changeBox}\r\n      removeTask={removeTask}\r\n      startChangeTask={startChangeTask}\r\n      changeValueTask={(changeValueTask)}\r\n      stopChangeTask={stopChangeTask}\r\n    />\r\n  )\r\n};\r\n\r\nexport default TaskContainer;","export const ADD_TASK = 'ADD_TASK';\r\nexport const CHANGE_TASK_STATUS = 'CHANGE__CHECK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const SELECT_ALL_TASK = 'SELECT_ALL_TASK';\r\nexport const CONTROL_ALL_SELECTED = 'CONTROL_ALL_SELECTED';\r\nexport const LEFT_TASKS = 'LEFT_TASKS';\r\nexport const REMOVE_SELECT_TASKS = 'REMOVE_SELECT_TASKS';\r\nexport const END_EDIT_TASK = 'END_EDIT_TASK';\r\nexport const FILTER_TASKS =  'FILTER_TASKS';\r\n","import React  from 'react';\r\nimport classes from './TaskList.module.css';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {\r\n  getFilteredTasksReselect,\r\n  getFilterValueReselect,\r\n  getTasksReselect\r\n} from \"../../State/ToDo-Reselect\";\r\nimport TaskContainer from \"./Task/TaskContainer\";\r\n\r\n\r\nconst TaskList = () => {\r\n  let tasks = useSelectors(getTasksReselect);\r\n  const filter = useSelectors(getFilterValueReselect);\r\n  const filteredTasks = useSelectors(getFilteredTasksReselect(filter, tasks));\r\n  tasks = filteredTasks.map((t, index) => {\r\n    return <TaskContainer\r\n      key={index}\r\n      id={tasks[t].id}\r\n      isCheck={tasks[t].check}\r\n      task={tasks[t].title}\r\n      tasks = {tasks}\r\n    />;\r\n  });\r\n  \r\n  \r\n  return (<section className={classes.main}>\r\n      <ul className={classes.todoList}>\r\n        {tasks}\r\n      </ul>\r\n    </section>\r\n  )\r\n};\r\n\r\n\r\nexport default TaskList;","import React, { memo } from 'react';\r\nimport classes from './FieldCreatingNewTasks.module.css';\r\nimport classnames from 'classnames';\r\n\r\nconst FieldCreatingNewTask =({\r\n  isTasks,\r\n  changeValue,\r\n  selectAll,\r\n  value,\r\n  isAllSelected\r\n}) => {\r\n  return (\r\n    <div className={classes.header}>\r\n      <input\r\n        onChange={changeValue}\r\n        onKeyPress={changeValue}\r\n        autoFocus\r\n        className={classes.todosInput}\r\n        value={value}\r\n        placeholder=\"What needs to be done?\"\r\n      />\r\n      {isTasks &&\r\n      <button\r\n        onClick={selectAll}\r\n        className={classnames(\r\n          classes.toggleAll,\r\n          isAllSelected && classes.active\r\n        )}\r\n      />}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default  memo(FieldCreatingNewTask);","import React, { useState, useCallback } from 'react';\r\nimport FieldCreatingNewTask from './FieldCreatingNewTasks';\r\nimport nanoid from 'nanoid';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {getAllSelectedReselect} from \"../../State/ToDo-Reselect\";\r\nimport useAction from \"../../HOOKS/useDispatch\";\r\nimport {ADD_TASK, SELECT_ALL_TASK} from \"../../Models/ActionConst\";\r\n\r\nconst FieldCreatingNewTaskContainer = ({countTasks}) => {\r\n  const allSelected = useSelectors(getAllSelectedReselect);\r\n  const addTask = useAction(ADD_TASK);\r\n  const selectedAllTasks = useAction(SELECT_ALL_TASK);\r\n  let [value, editValue] = useState('');\r\n\r\n  const changeValue = useCallback(e => {\r\n    editValue(e.currentTarget.value);\r\n    if (e.key === 'Enter' && e.currentTarget.value.trim()) {\r\n      addTask([nanoid(), e.currentTarget.value]);\r\n      editValue('');\r\n    }\r\n  }, [editValue, addTask]);\r\n  \r\n\r\n  const selectAll = () => {\r\n      selectedAllTasks();\r\n  };\r\n\r\n  return (\r\n    <FieldCreatingNewTask\r\n      isTasks = {Boolean(countTasks)}\r\n      selectAll = {selectAll}\r\n      isAllSelected = {Boolean(allSelected)}\r\n      value = {value}\r\n      changeValue = {changeValue}\r\n    />\r\n  )\r\n};\r\n\r\n\r\nexport default FieldCreatingNewTaskContainer;","import React from 'react';\r\nimport classes from './Footer.module.css';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst Footer = ({\r\n  leftTasks,\r\n  removeSelectedTask,\r\n  countTasks,\r\n  filter,\r\n  filterTasks\r\n}) => {\r\n  return (\r\n    <div className={classes.dataFooter}>\r\n\t\t  <span className={classes.todoCount}>\r\n\t\t\t<strong>{leftTasks}</strong>\r\n\t\t\t  item left\r\n\t\t  </span>\r\n        <ul className={classes.filters}>\r\n          <li>\r\n            <a href=\"#/All\"\r\n              className={classnames(\r\n                classes.filterBtnJs,\r\n                filter === 'All' && classes.active\r\n              )}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>All</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/Active\"\r\n              className={classnames(\r\n                classes.filterBtnJs,\r\n                filter === 'Active' && classes.active\r\n              )}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>Active</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#/Completed\"\r\n              className={classnames(\r\n                classes.filterBtnJs,\r\n                filter === 'Completed' && classes.active\r\n              )}\r\n              onClick={(e) => filterTasks(e.currentTarget.innerText)}>Completed</a>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          className={classnames(\r\n            classes.clear,\r\n            leftTasks < countTasks && classes.active\r\n          )}\r\n          onClick={() => {removeSelectedTask()}}>\r\n          Clear completed\r\n        </button>\r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from './Footer';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {\r\n  getFilterValueReselect,\r\n  getLeftTasksReselect,\r\n} from \"../../State/ToDo-Reselect\";\r\nimport useAction from \"../../HOOKS/useDispatch\";\r\nimport {FILTER_TASKS, REMOVE_SELECT_TASKS} from \"../../Models/ActionConst\";\r\n\r\n\r\nconst FooterContainer = ({countTasks}) => {\r\n  const leftTasks = useSelectors(getLeftTasksReselect);\r\n  const filter = useSelectors(getFilterValueReselect);\r\n  const removeSelectedTasks = useAction(REMOVE_SELECT_TASKS);\r\n  const filterTasks = useAction(FILTER_TASKS);\r\n  \r\n  const filteredTasks = (method) => {\r\n    filterTasks(method);\r\n  };\r\n  \r\n  const removeSelectedTask = () => {\r\n    removeSelectedTasks();\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Footer\r\n      leftTasks={leftTasks}\r\n      removeSelectedTask={removeSelectedTask}\r\n      countTasks={countTasks}\r\n      filter={filter}\r\n      filterTasks={filteredTasks}\r\n    />\r\n  )\r\n};\r\n\r\nexport default FooterContainer;","import React from 'react';\r\nimport classes from './../../TodoList.module.css';\r\nimport TaskList from '../TaskList/TaskList';\r\nimport FieldCreatingNewTaskContainer from '../FieldCreatingNewTasks/FieldCreatingNewTasksContainer';\r\nimport FooterContainer from '../Footer/FooterContainer';\r\nimport useSelectors from \"../../HOOKS/useSelector\";\r\nimport {getTasksCount} from \"../../State/ToDo-Reselect\";\r\n\r\n\r\nconst TodoListApp = () => {\r\n  const countTasks = useSelectors(getTasksCount);\r\n  return (\r\n    <>\r\n      <header className={classes.headerText}>todos</header>\r\n      <div className={classes.todo}>\r\n        <FieldCreatingNewTaskContainer countTasks = {countTasks}/>\r\n        <TaskList/>\r\n        {Boolean(countTasks) && <FooterContainer countTasks = {countTasks}/>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoListApp;\r\n","import React, { useEffect } from 'react';\nimport {\n  getFilterValueReselect, getIdsReselect,\n  getTasksReselect,\n} from './State/ToDo-Reselect';\nimport TodoListApp from './Components/TodoListApp/TodoListApp';\nimport useSelectors from \"./HOOKS/useSelector\";\nimport {CONTROL_ALL_SELECTED, LEFT_TASKS} from \"./Models/ActionConst\";\nimport useAction from \"./HOOKS/useDispatch\";\n\n\n\nconst  TodoList  = () => {\n  \n  const tasks = useSelectors(getTasksReselect);\n  const filter = useSelectors(getFilterValueReselect);\n  const ids = useSelectors(getIdsReselect);\n  const controllAllSelected = useAction(CONTROL_ALL_SELECTED);\n  const getCountLeftTasks = useAction(LEFT_TASKS);\n  useEffect(() => {\n    const count = ids.filter(t => !tasks[t].check).length;\n    getCountLeftTasks(count);\n    controllAllSelected();\n  }, [tasks, ids, controllAllSelected, getCountLeftTasks, filter]);\n\n    return (\n     <TodoListApp  tasks = {tasks}/>\n    );\n};\n\n\n\nexport default TodoList;\n","export const getStorage = (prop, valueDefault = []) => {\r\n  if (localStorage.getItem(prop)) {\r\n    return JSON.parse(localStorage.getItem(prop));\r\n  }\r\n  return valueDefault;\r\n};\r\n\r\n","export const removePropFromObject = (obj, id) => {\r\n  let res = {...obj};\r\n  delete res[id];\r\n  return res;\r\n};","export const removeArrayElement = (obj, id) => {\r\n  const index = obj.indexOf(id);\r\n  obj.splice(index, 1);\r\n  return obj;\r\n};","import {getStorage} from \"../Utils/LocalStorage\";\r\nimport {\r\n  ADD_TASK,\r\n  CHANGE_TASK_STATUS,\r\n  CONTROL_ALL_SELECTED, END_EDIT_TASK, FILTER_TASKS, LEFT_TASKS,\r\n  REMOVE_SELECT_TASKS,\r\n  REMOVE_TASK,\r\n  SELECT_ALL_TASK\r\n} from \"./ActionConst\";\r\nimport { normalize, schema } from 'normalizr';\r\nimport {removePropFromObject} from \"../Utils/removePropFromObject\";\r\nimport {removeArrayElement} from \"../Utils/removeArrayElement\";\r\n\r\nlet initialState = {\r\n  tasks: getStorage('todo'),\r\n};\r\n\r\nconst tasksScheme = new schema.Entity('tasks');\r\nconst myTasks = {tasks: [tasksScheme]};\r\nlet dataNormalized = normalize(initialState, myTasks);\r\ninitialState = {\r\n  tasks: {\r\n    entities: dataNormalized.entities.tasks || [],\r\n    ids: dataNormalized.result.tasks || []\r\n  },\r\n  allSelected: false,\r\n  leftTasks: 0,\r\n  filter: getStorage('filter', 'All'),\r\n};\r\n\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  let entities = {...state.tasks.entities};\r\n  let copyIds = [...state.tasks.ids];\r\n  localStorage.setItem('todo', JSON.stringify(entities));\r\n  localStorage.setItem('filter', JSON.stringify(state.filter));\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          ...state.tasks,\r\n          entities: {\r\n            ...state.tasks.entities,\r\n            [action.payload[0]]: {\r\n              id: action.payload[0],\r\n              check: false,\r\n              title: action.payload[1]\r\n            }\r\n          },\r\n          ids: [...state.tasks.ids, action.payload[0]]\r\n        }\r\n      };\r\n    case CHANGE_TASK_STATUS:\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          ...state.tasks,\r\n          entities: {\r\n            ...state.tasks.entities,\r\n            [action.payload[0]]: {\r\n              id: action.payload[0],\r\n              check: action.payload[1],\r\n              title: action.payload[2]\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          ...state.tasks,\r\n          ids: removeArrayElement(state.tasks.ids, action.payload),\r\n          entities: removePropFromObject(state.tasks.entities, action.payload)\r\n        }\r\n      };\r\n    case REMOVE_SELECT_TASKS:\r\n      state.tasks.ids.map(id => {\r\n        if (entities[id].check) {\r\n          delete entities[id];\r\n          copyIds = removeArrayElement(copyIds, id);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          entities,\r\n          ids: copyIds\r\n        }\r\n      };\r\n    case SELECT_ALL_TASK:\r\n      copyIds.map(id => entities[id].check = !state.allSelected);\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          entities,\r\n          ids: copyIds\r\n        }\r\n      };\r\n    case CONTROL_ALL_SELECTED:\r\n      return {\r\n        ...state,\r\n        allSelected: !state.leftTasks && state.tasks.ids.length,\r\n      };\r\n    case LEFT_TASKS:\r\n      return {\r\n        ...state,\r\n        leftTasks: action.payload\r\n      };\r\n    case END_EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: {\r\n          ...state.tasks,\r\n          entities: {\r\n            ...state.tasks.entities,\r\n            [action.payload[0]]:\r\n              {\r\n                id: action.payload[0],\r\n                check: action.payload[1],\r\n                title: action.payload[2]\r\n              }\r\n          }\r\n        }\r\n      };\r\n    case FILTER_TASKS:\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default taskReducer;","import { combineReducers, createStore } from 'redux';\r\nimport taskReducer from './../Models/todo-Reducer';\r\n\r\n\r\nlet reducer = combineReducers(\r\n  {\r\n    task: taskReducer\r\n  }\r\n);\r\n\r\nlet store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TodoList from './TodoList';\nimport store from \"./State/Store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render (\n  <Provider store={store}>\n  <TodoList/>\n  </Provider>, document.getElementById('root'));"],"sourceRoot":""}